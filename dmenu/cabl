#!/bin/bash
# Dependencies are xclip and xorg-xprop.
# qrencode required for qrcode generation.
# groff/zathura required for man pages.

LAUNCER="dmenu"

while getopts ":c" o; do case "$o" in
	c) prim="$(xclip -o)" ;;
	*) printf "Invalid option: -%s\\n" "$o" && exit ;;
esac done

[ -z "$prim" ] && prim="$*"
[ -z "$prim" ] && exit

PID=$(xprop -id "$(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')" | grep -m 1 PID | cut -d " " -f 3)
PID=$(echo "$(pstree -lpA "$PID" | tail -n 1)" | awk -F'---' '{print $NF}' | sed -re 's/[^0-9]//g')
cd "$(readlink /proc/"$PID"/cwd)"
[ -f "$prim" ] && xdg-open "$prim" && exit
[ -d "$prim" ] && "$TERMINAL" "$prim" && exit

search() { 
    fullsearch=$(echo "$*" | $LAUNCER -p "Enter !Bang prefix:")
    "$BROWSER" "https://duckduckgo.com/?q=$fullsearch"
}
maps() { "$BROWSER" "https://maps.google.com/?q=$*" ;}

echo "$prim" | grep "^http" >/dev/null && "$BROWSER" "$prim" && exit
echo "$prim" | grep "^.*\.[A-Za-z]\+.*" >/dev/null && url() { "$BROWSER" "$@" ;} && kdeconnect() { "kdeconnect-handler" "$@" ;} && dhandler() { dmenuhandler "$@" ;}
echo "$prim" | grep "^.*@.*\.[A-Za-z]\+$" >/dev/null && email() { xdg-email "$@" ;}
echo "$prim" | grep "^.*git*" >/dev/null && clone() { notify-send "cloning started"; git -C "$HOME/Downloads/" clone "$@"; notify-send "completed cloning";}
command -v qrencode >/dev/null && qrcode() { qrencode "$@" -s 10 -o /tmp/qr.png && xdg-open /tmp/qr.png ;}
read() { pico2wave -w=/tmp/test.wav "$*"; aplay /tmp/test.wav -D 'pulse'; rm /tmp/test.wav;}
man -k "^$prim$" >/dev/null && manual() { man -Tpdf "$prim" | $READER - ;}

prompt="$(echo "$prim" | awk 'NR==1{print $1, $2, $3}')"
func="$(declare -F | awk '{print $3}' | $LAUNCER -p "$prompt" -i -l 15)"

[ -z "$func" ] || "$func" "$prim"
#vim:ft=sh
