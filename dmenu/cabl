#!/bin/sh
# Dependencies are xclip and xorg-xprop.
# qrencode required for qrcode generation.

[ -z "$LAUNCER" ] && LAUNCER="dmenu"
[ -z "$OPENER" ] && OPENER="xdg-open"

while getopts cs: f
do
	case $f in
		c)
			prim="$(xclip -o)"
			if [ -z "${prim}" ]; then
				notify-send "no selection in clipboard"
				exit 1
			fi
			;;
		s)
			src=$OPTARG
			;;
		\?)
			printf 'Invalid option: -%s\n' "${f}" && exit 1
			;;
	esac
done
shift $(( OPTIND - 1))

# Custom opener when called from shell
shellopener(){
	case $(file --mime-type "$*" -b) in
		# follow symlinks
		inode/symlink) $0 "$(readlink "$*")" && exit;;
		# open sc files with sc
		application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) exec sc-im "$*";;
		application/csv) exec sc-im "$*";;
		# open text files with sc
		text/*) exec "${EDITOR:-vi}" "$*";;
		*) for f in "$@"; do sw "${OPENER}" "${f}" > /dev/null 2> /dev/null & done && exit 0;;
	esac
	exit 1
}

fallbackopen() {
	case ${prim} in
		*.xopp)
			exec xournalpp "${prim}"
			;;
		*)
			exec "$OPENER" "${prim}"
			;;
	esac


}

istext(){
	case $src in
		shell)
			case "$*" in
			  *\.1)
			    exec man "$*"
			    ;;
			  *)
				exec "${EDITOR:-vi}" "$*"
			    ;;
			esac
			;;
		vim)
			nvr -o "$*" --nostart && exit
			;;
		*)
			fallbackopen "$*"
			;;
	esac
	fallbackopen "$*"
}


isfile() {
	case $(file --mime-type "$*" -b) in
		# follow symlinks
		inode/symlink) isfile "$(readlink "$*")" && exit;;
		# open sc files with sc
		application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) isspreadsheet "$*";;
		# open text files with sc
		text/*)  istext "$*";;
		*) for f in "$@"; do fallbackopen "$*" > /dev/null 2> /dev/null & done && exit 0;;
	esac
}

isdir() {
	cd "$*" && exec "$TERMINAL" && exit 0
	fallbackopen "$*"
}

[ -z "${prim}" ] && prim="$*"
[ -z "${prim}" ] && exit
PID=$(xprop -id "$(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')" | grep -m 1 PID | cut -d " " -f 3)
PID=$(echo "$(pstree -lpA "${PID}" | tail -n 1)" | awk -F'---' '{print $NF}' | sed -re 's/[^0-9]//g')
cd "$(readlink /proc/"${PID}"/cwd)" || exit

# FILE
prim=$(echo "${prim}" | sed 's/file://g') # Remove file url
[ -f "${prim}" ] && isfile "${prim}" && exit 1

browse() { exec "${BROWSER}" "${prim}" ; }
email() { xdg-email "${prim}" && exit; } 
vimplug() { exec "${BROWSER}" "https://github.com/$(echo "${prim}" | cut -d\' -f2)"; }
errormsg() { exec "${TERMINAL}" -e "${EDITOR:-vi}" "$(echo "${prim}" | cut -d: -f1)" "+$(echo "${prim}" | cut -d: -f2)" ; }
date() { 
	exec "${BROWSER}" "https://calendar.google.com/calendar/r/day/$(echo "${prim}" |
		awk -F '[- ]' '{$1=$1}1 {printf "%s/%s/%s", $1, $2, $3}' | tr -d '<')"
	}

# DIRECTORY
[ -d "$prim" ] && isdir "${prim}" && exit 1

# ONLY ONE LINE
if [ "$(echo "${prim}" | wc -l )" -eq 1 ] ; then
	# URL
	echo "${prim}" | grep "^\s*https\?.*\.[A-Za-z]\+.*" > /dev/null && browse
	# EMAIL
	echo "${prim}" | grep "[A-Za-z0-9._%+-]\+@[A-Za-z0-9.-]\+\.[A-Za-z]\{2,6\}\$" > /dev/null && email
	# VIM PLUGIN
	echo "${prim}" | grep ".*Plug.*'.*/.*'.*" > /dev/null && vimplug
	# ERROR MESSAGE
	echo "${prim}" | cut -d: -f1 | xargs -r test -f &&
		echo "${prim}" | grep -E '^[A-Za-z/\.-]+:[0-9]+' > /dev/null && errormsg
			# DATE https://calendar.google.com/calendar/r/day/
			echo "${prim}" | grep '\s*<\?[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [a-zA-Z]\{3\} \?\([0-9]\{2\}:[0-9]\{2\}\)\?>\?\s*' > /dev/null && date
fi

# BEGIN OPTIONS
OPTIONS="
search
qrcode
maps
read"

search() { "${BROWSER}" "https://duckduckgo.com/?q=$*"; }
qrcode() { qrencode "$*" -s 10 -o /tmp/qr.png && "$OPENER" /tmp/qr.png; }
maps() { "${BROWSER}" "https://maps.google.com/?q=$*"; }
dhandler() { dmenuhandler "$@"; }
manual() { man -Tpdf "${prim}" | ${READER} -; }

# READ ALOUD
read() {
	killall aplay
	pico2wave -w=/tmp/test.wav -- "$1"
	# picospeaker "$*"
	# aplay /tmp/test.wav -D 'pulse'
	aplay /tmp/test.wav
	rm /tmp/test.wav
}


# MAYBE A URL
echo "${prim}" | grep "^.*\.[A-Za-z]\+.*" > /dev/null && OPTIONS="${OPTIONS}\ndhandler"

# check if single word
if [ "$(echo "${prim}" | wc -w)" -eq 1 ]; then
	# if manpage exists
	man -w "${prim}" > /dev/null && OPTIONS="${OPTIONS}\nmanual"
fi

prompt="Plumb \"$(echo "${prim}" | awk ' NR==1' | cut -c -18)\" to?"

func="$(printf "$OPTIONS" | awk 'NR>1' | ${LAUNCER} -p "${prompt}" -i -l 15)"

[ -z "${func}" ] || "${func}" "${prim}"
#vim:ft=sh
