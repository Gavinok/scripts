#!/bin/sh

dmenu_args=${@:--i -l 15}
dmenu="dmenu $dmenu_args"

menuitems="\
: add
: clear
: play/pause
: prev
: next
: settings
"
menuitems_num=$(printf "%s" "$menuitems" | wc -l)

settings="\
repeat
random
single
consume
"

add_menu()
{
	toadd=$( (printf '%s\n' "*"; mpc ls "$1") | $dmenu)
	if [ "$toadd" = "" ]; then
		return
	fi
	if [ "$toadd" = "*" ]; then
		mpc -q add "$1"
		return
	fi

	# If selection is a directory, enter it.	
	# With mpc, there's no reliable way of telling if an element
	# is a directory. On the other hand, following code makes no
	# sense when MPD runs on remote machine.
	# The workaround is to add listed elements to queue only
	# when * is selected.

	#if [ -f "$mpd_music_dir/$toadd" ]; then
	#	mpc -q add "$toadd"
	#	return
	#fi
	#if [ -d "$mpd_music_dir/$toadd" ]; then
	#	add_menu "$toadd"
	#	return
	#fi

	add_menu "$toadd"
}

settings_menu()
{
	choice=$(printf "%s" "$settings" | $dmenu)
	[ -n "$choice" ] && mpc -q "$choice"
}

list_songs()
{
	mpc playlist | nl -w8 -s " "
}

menu=$(printf "%s" "$menuitems"; list_songs)
currently_playing=$(mpc status | grep playing | sed 's/.*#\([0-9]*\).*/\1/')
if [ -n "$currently_playing" ]; then
	currently_playing_pos=$((currently_playing+menuitems_num))
	echo $currently_playing_pos
	menu=$(printf "%s" "$menu" | sed "$currently_playing_pos"'s/^ />/')
fi
choice=$(printf "%s" "$menu" | $dmenu)

case "$choice" in
"")
	exit
	;;
": add")
	add_menu
	;;
": play/pause")
	mpc -q toggle
	;;
": settings")
	settings_menu
	;;
": "*)
	mpc -q "${choice#: }"
	;;
*)
	mpc -q play "$(printf "%s" "$choice" | sed 's/>\?\ *\([0-9]*\).*/\1/')"
	;;
esac
