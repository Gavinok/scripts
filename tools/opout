#!/bin/sh
# opout: "open output": A general handler for opening a file's intended output.
# I find this useful especially running from vim.

basename="$(echo "$1" | sed 's/\.[^\/.]*$//')"
file=$(readlink -f "$1")
dir=$(dirname "$file")
secdir=$(dirname "$dir")
texopen(){
	    echo "${secdir}/Notes.pdf"
	    if [ -f "${secdir}/Notes.pdf" ]; then
		setsid "$READER" "${secdir}/Notes.pdf" >/dev/null 2>&1 &
		exit
	    fi
	    setsid "$READER" "$basename".pdf >/dev/null 2>&1 &
}
case "$1" in
	*.tex) texopen "$1" ;;
	*.md|*.mmd|*.rmd|*.ms|*.groff|*.me|*.mom|*.jot|*.docx|*.doc|*.org|*.ps) 
		if [ -f "$basename".pdf ]; then
			setsid "$READER" "$basename".pdf >/dev/null 2>&1 & 
		elif [ -f "$basename".ps ]; then
			setsid "$READER" "$basename".ps >/dev/null 2>&1 & 
		elif [ -f "$basename".html ]; then
	    	setsid "google-chrome-stable" "$basename".html >/dev/null 2>&1 &
		fi
			;;
	*.pdf) setsid "$READER" "$file" >/dev/null 2>&1 & ;;
	*.html) 
	    setsid "google-chrome-stable" "$basename".html >/dev/null 2>&1 & ;;
	*.sent) setsid sent "$1" >/dev/null 2>&1 & ;;
esac
