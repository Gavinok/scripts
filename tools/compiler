#!/bin/sh

# This script will compile or run another finishing operation on a document. I
# have this script run via Vim.
# # tex files: Compiles to pdf, including bibliography if necessary
# md files: Compiles to pdf via pandoc
# rmd files: Compiles via R Markdown
# c files: Compiles via whatever compiler is set to cc. Usually gcc.
#	   Use make if Makefile exists.
# py files: runs via python command
# go files: compiles and runs with "go run"
# config.h files: (For suckless utils) recompiles and installs program.
# all others: run `sent` to show a presentation

file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"

cd "$dir" || exit

Ifinstalled() {
	command -v "$1" >/dev/null || { notify-send "ðŸ“¦ <b>$1</b> must be installed for this function." && exit 1; }
}

textype() {
	command="pdflatex"
	errorfmt="-file-line-error"
	# ( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
	secdir="$(dirname "$dir")"
	cd "$secdir"
	if [ -f "${secdir}/Notes.tex" ]; then
		echo "${secdir}/Notes.tex"
		$command $errorfmt --output-directory="$secdir" "${secdir}/Notes.tex"
		exit
	fi
	$command $errorfmt --output-directory="$dir" "$base"
	grep -i addbibresource "$file" >/dev/null &&
		biber --input-directory "$dir" "$base" &&
		$command $errorfmt --output-directory="$dir" "$base" &&
		$command $errorfmt --output-directory="$dir" "$base"
}

pandoccmd() {
	Ifinstalled pdflatex && pandoc -V geometry:margin=4cm -f markdown-implicit_figures "$1" -o "${2}.pdf"
	Ifinstalled groff && pandoc "${1}" -t ms -o "${2}.pdf" && exit
}

pandocorg() { pandoccmd "$file" "$base"; }

compilec() {
	if [ -f "${dir}/Makefile" ]; then
		make
	else
		cc "$file" -o "$base" && "$base"
	fi
}

# If there is a global $REFBIB variable/file for `refer`, use it.
[ -f "$REFBIB" ] && groffbib="-p $REFBIB"

case "$file" in
*\.ms|*\.groff) groff -Gktes -b -w w -ms -mspdf -T ps "$file" | ps2pdf - >"$base".pdf ;;
*\.mom) groff -Gktes -wall -Wrange -mom -pdfmark -T ps "$file" | ps2pdf - > "$base".pdf ;;
*\.mm|*\.me) grog "$file" --run | ps2pdf - > "$base".pdf ;;
*\.tex) textype "$file" ;;
*\.org) Ifinstalled pandoc && pandocorg "$file" "$base" && exit ;;
*\.md) Ifinstalled pandoc && pandoccmd "$file" "$base" && exit ;;
*config.h) make && sudo make install ;;
*\.c) compilec ;;
*\.h) compilec ;;
*\.r) R -f "$file";;
*\.java) javac "$file" && echo "${base##*/}" | xargs java ;;
*\.js) node "$file" ;;
*\.py) python "$file" ;;
*\.tcl) tclsh "$file" ;;
*\.docx | *\.doc)
	Ifinstalled libreoffice && lowriter --convert-to pdf "$file" && exit
	Ifinstalled pandoc && pandoccmd "$file" "$base" && exit
	;;
*\.dot|*\.gv) dot -Tsvg "$file" | convert svg:- "$base".eps ;;
*\.go) go run "$file" ;;
*\.vim*) vint "$file" ;;
*\.sent) setsid sent "$file" 2>/dev/null &;;
*\.html) refreshbrowser ;;
*) chmod +x "$file" && sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac
# vim:ft=sh
