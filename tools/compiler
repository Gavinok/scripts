#!/bin/dash

# This script will compile or run another finishing operation on a document. I
# have this script run via Vim.
#
# tex files: Compiles to pdf, including bibliography if necessary
# md files: Compiles to pdf via pandoc
# rmd files: Compiles via R Markdown
# c files: Compiles via whatever compiler is set to cc. Usually gcc. 
#	   Use make if Makefile exists.
# py files: runs via python command
# go files: compiles and runs with "go run"
# config.h files: (For suckless utils) recompiles and installs program.
# all others: run `sent` to show a presentation

file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"

cd "$dir" || exit
Ifinstalled(){
    command -v "$1" >/dev/null || { notify-send "ðŸ“¦ <b>$1</b> must be installed for this function." && exit 1 ;}
}

textype() { \
	command="pdflatex"
    ( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
    $command --output-directory="$dir" "$base" &&
    grep -i addbibresource "$file" >/dev/null &&
    biber --input-directory "$dir" "$base" &&
    $command --output-directory="$dir" "$base" &&
    $command --output-directory="$dir" "$base"
}

compilec(){
    if [ -f "${dir}/Makefile" ]; then
	make
    else
	cc "$file" -o "$base" && "$base" 
    fi
}

# If there is a global $REFBIB variable/file for `refer`, use it.
[ -f "$REFBIB" ] && groffbib="-p $REFBIB"

case "$file" in
    *\.ms) refer -PS -e "$groffbib" "$file"  | groff -kejpt -ms -T pdf > "$base".pdf ;;
    *\.groff) refer -PS -e "$groffbib" "$file"  | groff -kejpt -ms -T pdf > "$base".pdf ;;
    *\.rmd) echo "require(rmarkdown); render('$file')" | R --vanilla && mv "$base".pdf "$dir"/pdfs;;
    *\.tex) textype "$file" ;;
    *\.md)  
	# for github flared Markdown with links
	# if Ifinstalled grip && Ifinstalled wkhtmltopdf;then
	#     grip --quiet --export "$file" -  | wkhtmltopdf - "$base".pdf
	#     rm "$base".html
	#     exit
	# fi
	Ifinstalled md2pdf && md2pdf "$file" && exit
	Ifinstalled pandoc && pandoc "$file" --pdf-engine=xelatex -o "$base".pdf && exit
	;;
    *config.h) make && sudo make install ;;
    *\.c) compilec ;;
    *\.h) compilec ;;
    *\.py) python "$file" ;;
    *\.docx|*\.doc) 
	Ifinstalled libreoffice && lowriter --convert-to pdf "$file" && exit
	Ifinstalled pandoc && pandoc "$file" --pdf-engine=xelatex -o "$base".pdf && exit
	    ;;
    *\.go) go run "$file" ;;
    *\.sent) setsid sent "$file" 2>/dev/null & ;;
    *) chmod +x "$file" && sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac

