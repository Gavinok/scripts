# make plan9 walk available on all systems
walk() {
	if type walk >/dev/null 2>&1; then
		/usr/local/bin/walk
	elif type fd >/dev/null 2>&1; then
		fd -c never .
	else
		find .
	fi
}

# Calculator
calc() { echo "scale=5;$*" | bc -l; }

r() {
	# Block nesting of nnn in subshells
	if [ -n "${NNNLVL}" ] && [ "${NNNLVL:-0}" -ge 1 ]; then
		echo "nnn is already running"
		return
	fi

	# The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
	# To cd on quit only on ^G, remove the "export" as in:
	#     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
	# NOTE: NNN_TMPFILE is fixed, should not be modified
	export NNN_TMPFILE="${XDG_CONFIG_HOME:-${HOME}/.config}/nnn/.lastd"

	nnn -c "$@"

	if [ -f "${NNN_TMPFILE}" ]; then
		. "${NNN_TMPFILE}"
		rm -f "${NNN_TMPFILE}" >/dev/null
	fi
}

#dirsize - finds directory sizes and lists them for the current directory
dirsize() {
	du -shx -- * .[a-zA-Z0-9_]* 2>/dev/null |grep -E '^ *[0-9.]*[MG]' | sort -n >/tmp/list
	grep -E '^ *[0-9.]*M' /tmp/list
	grep -E '^ *[0-9.]*G' /tmp/list
	rm /tmp/list
}

#myip - finds your current IP if your connected to the internet
myip() {
	lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | awk '{ print $4 }' | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g'
}

# mkdir and cd in one command
mcd() {
	mkdir -p -- "$1" &&
		cd -P -- "$1" || return
}

# define a word
define() {
    curl -s dict://dict.org/d:$1 | grep -v '^[0-9]'
}

man() {
	/bin/man "$*" || awman "$*"
}

# List Packages by Size
# this function provides core functionality of "List Packages by Size". the help page provides additional explanations.
pasz ()
{
        #set +e
        #set +E

        # list all packages on local system sorted by their installed size using "expac" and "sort".
        # expac -H M -Q "%12m - \e[1m%n\e[0m %v"  displays size, name, and version number
        # "sort -n -r"  sorts list by number (with which every element begins).
        # ATTENTION: (i do not know why but) using quotes (" symbols) around $( comm ...) breaks expac
        expac -H M -Q "%12m - \e[1m%n\e[0m" $( pacman -Qq | sort) | sort -n -r | fzf -i --multi --exact --no-sort --ansi --reverse --bind=right:half-page-down,left:half-page-up --margin=4%,1%,1%,1% --info=inline --no-unicode --preview '
            echo -e "\e[1mInstalled package info: \e[0m"
            pacman -Qi {4} --color always
            ' "$( if (( $(tput cols) >= 125 )); then echo "--preview-window=right:60%:wrap"; else echo "--preview-window=bottom:60%:wrap"; fi )" --header="Navigate with PageUp / PageDown. ESC to quit." --prompt='Enter string to filter list > ' > /tmp/pacui-ls
        # alternative command to "expac" and "sort": package-query -Qe --rsort 2 -f "%2 - \e[1m%n \e[0m%v" | numfmt --to=iec

        #set -e
        #set -E
}
# Create a shell function as a wrapper
viminfo () {
    ${EDITOR} -R -M -c "Info $1 $2" +only
}
# Alias info to our new function
alias info=viminfo

notegrep () {
	${EDITOR} -c "NGrep $*"
}
# vim:ft=sh
